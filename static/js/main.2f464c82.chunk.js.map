{"version":3,"sources":["MovieCard/MovieCard.js","MoviesContainer/MoviesContainer.js","Header/Header.js","Error/Error.js","SingleMovie/SingleMovie.js","apiCalls.js","RatingSearch/RatingSearch.js","App/App.js","reportWebVitals.js","index.js"],"names":["MovieCard","id","image","title","rating","to","className","src","alt","Math","round","MoviesContainer","movies","moviesByRating","length","filteredMovies","map","movie","poster_path","backdrop","backdrop_path","average_rating","movieCards","Header","Error","error","SingleMovie","props","componentDidMount","getSingleMovie","fetch","then","response","json","getSingleMovieData","singleMovieData","setState","movieDetails","catch","message","state","this","render","release_date","overview","genres","budget","revenue","runtime","tagline","Component","RatingSearch","getMoviesByRating","DropdownButton","Dropdown","Item","onClick","event","target","name","href","App","moviesData","ratingMinMax","range","split","moviesInRange","filter","exact","path","match","parseInt","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","router","basename","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2f464c82.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.css';\nimport { Link } from 'react-router-dom';\n\nconst MovieCard = ( {id, image, title, rating }) => {\n  return (\n    <Link to={`/${id}`} className=\"movie-card-link\">\n      <section className=\"movie-card\" >\n        <div className=\"image-holder\">\n          <img className=\"card-image\" src={image} alt={title}/>\n        </div>\n        <div className=\"card-details\">\n          <h2 className=\"card-title\">{title}</h2>\n          <h3 className=\"rating\">Rating: {Math.round( rating * 10 ) / 10}</h3>\n        </div>\n      </section>\n    </Link>\n  )\n}\n\nexport default MovieCard\n","import React from 'react';\nimport MovieCard from '../MovieCard/MovieCard';\nimport './MoviesContainer.css';\n\nconst MoviesContainer = ({ movies, moviesByRating }) => {\n  if (moviesByRating[0] === \"NaN\") {\n    return (\n      <h1 className=\"no-movies\">There are no movies with this rating range. <br/> Please choose a different range.</h1>\n    )\n  } else if (moviesByRating.length > 0) {\n    const filteredMovies = moviesByRating.map(movie => {\n      return (\n        <MovieCard \n          id={movie.id}\n          key={movie.id}\n          image={movie.poster_path}\n          backdrop={movie.backdrop_path}\n          title={movie.title || \"There are no movies with this rating.\"} \n          rating={movie.average_rating}\n        />\n      )\n    })\n    return (\n      <section className='movies-container'>\n        {filteredMovies}\n      </section>\n    )\n  } else {\n    const movieCards = movies.map(movie => {\n      return (\n        <MovieCard \n          id={movie.id}\n          key={movie.id}\n          image={movie.poster_path}\n          backdrop={movie.backdrop_path}\n          title={movie.title}\n          rating={movie.average_rating}\n        />\n      )\n    })\n    return (\n      <section className='movies-container'>\n        {movieCards}\n      </section>\n    )\n  }\n}\n\nexport default MoviesContainer;","import React from 'react';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <header>\n      <h1 className=\"heading\">Rancid Tomatillos Movie Ratings</h1>\n    </header>\n  )\n}\n\nexport default Header;\n\n","import React from 'react';\nimport './Error.css';\n\nconst Error = ({ error }) => {\n  return(\n    <h1 className=\"error-message\">{error}</h1>\n  )\n} \n\nexport default Error;","import React, {Component} from 'react'\nimport './SingleMovie.css';\nimport { getSingleMovieData } from '../apiCalls.js'\nimport { Link } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport Error from '../Error/Error';\n\n\n\nclass SingleMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state= {\n      movieDetails: [],\n      error: '',\n    }\n  }\n\n  componentDidMount = () => {\n    this.getSingleMovie(this.props.id)\n\n  }\n\n  getSingleMovie = (id) => {\n    getSingleMovieData(id)\n      .then(singleMovieData => {\n        this.setState({ movieDetails: singleMovieData.movie  })\n      })\n      .catch(error => this.setState({ error: error.message }));\n  }\n\n  render() {\n    if(this.state.error) {\n      return (\n        <Route render={() =>\n          <Error error={this.state.error} />\n        }\n        />\n      )\n    }\n    return (\n      <section className=\"single-movie\">\n        <div className=\"backdrop-holder\">\n          <img className=\"backdrop-image\" src={this.state.movieDetails.backdrop_path} alt={this.state.movieDetails.title}/>\n        </div>\n        <div className=\"movie-details-holder\">\n          <h2 className=\"card-title\">{this.state.movieDetails.title}</h2>\n          <h3 className=\"rating\">Rating: {Math.round( this.state.movieDetails.average_rating * 10 ) / 10}</h3>\n          <h3 className=\"release-date\">Release Date: {this.state.movieDetails.release_date}</h3>\n          <h3 className=\"overview\">Overview: <br/>{this.state.movieDetails.overview}</h3>\n          <h3 className=\"genres\">Genres: {this.state.movieDetails.genres}</h3>\n          <h3 className=\"budget\">Budget: ${this.state.movieDetails.budget}.00</h3>\n          <h3 className=\"revenue\">Revenue: ${this.state.movieDetails.revenue}.00</h3>\n          <h3 className=\"runTime\">Run-Time: {this.state.movieDetails.runtime} minutes</h3>\n          <h3 className=\"tagline\">Tagline: {this.state.movieDetails.tagline}</h3>\n        </div>\n        <Link to={'/'} className='return-button'>◀Return to All Movies</Link>\n      </section>\n    )\n  }\n}\n\nexport default SingleMovie;","export const getAllMoviesData = () => {\n  return fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies')\n    .then(response => response.json())\n}\n\nexport const getSingleMovieData = (id) => {\n  const apiLink = 'https://rancid-tomatillos.herokuapp.com/api/v2//movies/'\n  return fetch(`${apiLink}${id}`)\n    .then(response => response.json())\n}","import React from 'react';\nimport './RatingSearch.css';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\n\nconst RatingSearch = ({ getMoviesByRating }) => {\n  return(\n    <DropdownButton id=\"dropdown-basic-button\" title=\"Search Movies By Rating\" className=\"ratings-dropdown\" >\n      <Dropdown.Item onClick={(event) => getMoviesByRating(event.target.name)} name={[1, 10]} href=\"#\">All Movies</Dropdown.Item>\n      <Dropdown.Item onClick={(event) => getMoviesByRating(event.target.name)} name={[1, 2]} href=\"#rating-1-2\">1-2</Dropdown.Item>\n      <Dropdown.Item onClick={(event) => getMoviesByRating(event.target.name)} name={[2, 3]} href=\"#rating-2-3\">2-3</Dropdown.Item>\n      <Dropdown.Item onClick={(event) => getMoviesByRating(event.target.name)} name={[3, 4]} href=\"#rating-3-4\">3-4</Dropdown.Item>\n      <Dropdown.Item onClick={(event) => getMoviesByRating(event.target.name)} name={[4, 5]} href=\"#rating-4-5\">4-5</Dropdown.Item>\n      <Dropdown.Item onClick={(event) => getMoviesByRating(event.target.name)} name={[5, 6]} href=\"#rating-5-6\">5-6</Dropdown.Item>\n      <Dropdown.Item onClick={(event) => getMoviesByRating(event.target.name)} name={[6, 7]} href=\"#rating-6-7\">6-7</Dropdown.Item>\n      <Dropdown.Item onClick={(event) => getMoviesByRating(event.target.name)} name={[7, 8]} href=\"#rating-7-8\">7-8</Dropdown.Item>\n      <Dropdown.Item onClick={(event) => getMoviesByRating(event.target.name)} name={[8, 9]} href=\"#rating-8-9\">8-9</Dropdown.Item>\n      <Dropdown.Item onClick={(event) => getMoviesByRating(event.target.name)} name={[9, 10]} href=\"#rating-9-10\">9-10</Dropdown.Item>\n    </DropdownButton>\n  )\n  \n}\n\nexport default RatingSearch;","import React, { Component } from 'react';\nimport MoviesContainer from '../MoviesContainer/MoviesContainer';\nimport Header from '../Header/Header';\nimport SingleMovie from '../SingleMovie/SingleMovie';\nimport { getAllMoviesData } from '../apiCalls.js'\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Error from '../Error/Error';\nimport RatingSearch from '../RatingSearch/RatingSearch';\n\nclass App extends Component {\n  constructor () {\n    super();\n    this.state = {\n      movies: [],\n      error: '',\n      movieDetails: null,\n      moviesByRating: [],\n    }\n  }\n\n  componentDidMount = () => {\n    getAllMoviesData()\n      .then(moviesData => this.setState({ movies: moviesData.movies }))\n      .catch(error => this.setState({ error: error.message }));\n  }\n\n  getMoviesByRating = (ratingMinMax) => {\n    const range = ratingMinMax.split(\",\"); \n    const moviesInRange = this.state.movies.filter(movie => {\n      return movie.average_rating >= +range[0] && movie.average_rating <= +range[1]\n    })\n    if (moviesInRange.length === 0) {\n      this.setState({moviesByRating: [\"NaN\"]})\n    } else {\n      this.setState({moviesByRating: moviesInRange})\n    }\n  }\n\n  render() {\n    if(this.state.error) {\n      return (\n        <Route render={() =>\n          <Error error={this.state.error} />\n        }\n        />\n      )\n    }\n    return (\n      <main>\n        <Header />\n        <Switch>\n          <Route exact path='/' render={() => \n            <section>\n              <RatingSearch getMoviesByRating={this.getMoviesByRating} />\n              <MoviesContainer movies={this.state.movies} moviesByRating={this.state.moviesByRating} />\n            </section>\n          }\n          />\n          <Route path='/:id' \n            render={({match}) => {\n              return <SingleMovie id={parseInt(match.params.id)} />\n            }\n          }\n          />\n        </Switch>\n      </main>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst router = (\n  <BrowserRouter basename='/sarah-chadrick-Rancid-Tomatillos'>\n    <App />\n  </BrowserRouter>\n)\n\n  ReactDOM.render(router, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}